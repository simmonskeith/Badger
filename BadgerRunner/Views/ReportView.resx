<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAISEAAAEACADUCQAAFgAAACgAAAAhAAAAQgAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgHyMAIiAkACMiJgAmIiYAJyQnACgkJwAnJioALCYpAC4oKgArKi4ANCstADUtLgA4Li8AOS8wAEI0
        NABFNzYASjo4ADw7PgBNPDkAUT48AFZBPgBYQz8AXkZBAGFIQwBiSUQAZEpFAGpOSABSUVQAcFJLAHJT
        TAB1VU0AeVdPAFxcXQCAXFMAg15UAIhhVwCNZFkAkGZbAJZqXgCYa18AmmxgAJ5vYgCfcGMAoXFkAKZ0
        ZgCqd2gAjXdyALB6awCye2wAfX1/ALV9bQC4f28AuoFwALyCcQCFgoQAvYRzAL6FdQDAinoAw4+AAMSQ
        gQCSkpQAxpSFAJiXmQDImIoAnJudAMuekADMn5IAzKGUANCnmwDRqZ0A066iANi1qwC4uLgA27uyANu8
        sgC8vL0A2sG6AODGvgDhx8AA4snBAOTNxgDm0MoA6NPNANzc3ADt3dkA39/gAO/h3QDw4t4A6OjoAPLo
        5QDq6eoA9OvpAPXt6gD48vAA9PT0APn08wDt9vwA+/f2APv49wD8+voA/Pz8APn8/gD+/f0A/v7+APz+
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpAAAAaWlnZ2dnZ2dnZ2RhTT81NTUf
        AAAAACZjZ2dnaWlpaWlpAAAAaWlnZ2dnZ2dkZk45NTU1NTUOAAAAACY6ZGdnZ2lpaWlpAAAAaWlnZ2dn
        Z2ZOOTU1NTU1NSwAAAAAACY5TmZnZ2dnZ2dpAAAAaWlnZ2dnX0M1NTU1NTU1HwAAAAAFMjU1NUNfZ2dn
        Z2dpAAAAaWlnZWdnPTU1NTU1NTU1DgAAAAAWNTU1NTU9Z2dnZ2dpAAAAaWlnZ1I/NTU1NTU1NTUsAAAA
        AAAmNTU1NTU1P1tnZ2dpAAAAaWlnYzo1NTU1NTU1MjUcAAAAAAs0NTU1NTU1NURnZ2dpAAAAaWloUDU1
        NTU1NTU1NR8AAAAABTI1NTU1NTU1NTVZZ2dpAAAAaWlnQjU1NTU1NTU1NQ4AAAAAFjU1NTU1NTU1NTVK
        Z2dpAAAAaWliNzU1NTU1NTU1LAAAAAAAJjU1NTU1NTU1NTU/Z2dpAAAAaWlWNTU1NTU1NTU1HAAAAAAL
        NDU1NTU1NTU1NTU1Y2dpAAAAaWlRNTU1NTU1NTU1CwAAAAAaKiIpNTU1MjU1NTU1XGdpAAAAaWlQNTU1
        NTU1NTUoAAAAAAAAAAAHKzU1GRAoNTU1WWdpAAAAaWlRNTU1NTU1NTUZAAAAAAAAAAUACCw1DAAHNDU1
        XGdpAAAAaWlUNTU1NTU1NTQIAAAAABYnMDMSAAonAAAUNTU1Y2dpAAAAaWlfNTU1NTU1NSUAAAAAAC01
        NTUzEgADAAAhNTU9Z2dpAAAAaWlnPzU1NTU1NRUAAAAADjU1NTU1MhAAAAAtNTVHZ2dpAAAAaWlnTTU1
        NTU1MgQAAAAAHjU1NTU1NS8AAAw1NTVWZ2dpAAAAaWlnYTk1NTU1IwMDAwMELDU1NTU1NSQAABg1NUFn
        Z2dpAAAAaWlnZE41NTU1NTU1NTU1NTU1NTU1NRkAACQ1NVdnZ2dpAAAAaWlnZ2ZDNTU1NTU1NTU1NTU1
        NTU1NQ0AATI1SWdnZ2dpAAAAaWlnZ2dfPTU1NSMTDhUmNTU1NTU1LQAADzVEZmdnZ2dpAAAAaWlnZ2dn
        Zz80FAAAAAAAHTU1NTU1NCQOHEVjZ2dnZ2dpAAAAaWlnZ2dnZ2IuAAAAAAAAACg1NTU1NTU4TGdnZ2dn
        Z2dpAAAAaWlnZ2dnZ2cbAAAAAAAAABc1NTU1N0ZcZ2BnZ2dnZ2dpAAAAaWlnZ2dnZ2cRAAAAAAAAABM1
        O0VPXWdnZ2dnZ2dnZ2dpAAAAaWlnZ2dnZ2cgAAAAAAAAADZjZ2dnZ2dnZ2dnZ2dnZ2dpAAAAaWlnZ2dn
        Z2dLAAAAAAAABlVnZ2dnZ2dnZ2dnZ2dnZ2dpAAAAaWlnZ2dnZ2dePgIAAAAJSGdnZ2dnZ2dnZ2dnZ2dn
        Z2dpAAAAaWlnZ2dnZ2dnWFM8MUBaZ2dnZ2dnZ2dnZ2dnZ2dnZ2dpAAAAaWlpaWlpaWlpaWlpaWlpaWlp
        aWlpaWlpaWlpaWlpaWlpAAAAaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>